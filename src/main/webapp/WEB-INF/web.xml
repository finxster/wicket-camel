<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app>

	<display-name>wicket-camel</display-name>

	<!-- There are three means to configure Wickets configuration mode and they 
		are tested in the order given. 1) A system property: -Dwicket.configuration 
		2) servlet specific <init-param> 3) context specific <context-param> The 
		value might be either "development" (reloading when templates change) or 
		"deployment". If no configuration is found, "development" is the default. -->

	<filter>
		<filter-name>wicket.wicket-camel</filter-name>
		<filter-class>org.apache.wicket.protocol.http.WicketFilter
		</filter-class>
		<init-param>
			<param-name>applicationClassName</param-name>
			<param-value>com.avenuecode.WicketApplication</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>wicket.wicket-camel</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- The SpringWebApplicationFactory will need access to a Spring Application 
		context, configured like this... -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
</web-app>
